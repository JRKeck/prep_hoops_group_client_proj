var prepHoopsApp=angular.module("prepHoopsApp",["ngRoute","ui.bootstrap","appControllers"]),appControllers=angular.module("appControllers",[]);prepHoopsApp.config(["$routeProvider",function(e){e.when("/login",{templateUrl:"/assets/views/routes/login.html",controller:"LoginController"}).when("/register",{templateUrl:"/assets/views/routes/register.html",controller:"RegisterController"}).when("/admin",{templateUrl:"/assets/views/routes/admin.html",controller:"AdminController"}).when("/dashboard",{templateUrl:"/assets/views/routes/dashboard.html",controller:"DashboardController"}).when("/site",{templateUrl:"/assets/views/routes/site.html",controller:"SiteController"}).otherwise({redirectTo:"/login"})}]),prepHoopsApp.factory("AuthService",["$q","$timeout","$http",function(e,o,t){function r(){return i?!0:!1}function n(){return i}function s(o,r){var n=e.defer();return t.post("/userauth/login",{username:o,password:r}).success(function(e,o){200===o&&e.status?(console.log("success"),i=!0,n.resolve()):(i=!1,n.reject())}).error(function(e){console.log("error"),i=!1,n.reject()}),n.promise}function l(){var o=e.defer();return t.get("/userauth/logout").success(function(e){i=!1,o.resolve()}).error(function(e){i=!1,o.reject()}),o.promise}var i=!1;return{isLoggedIn:r,getUserStatus:n,login:s,logout:l,user:i}}]),prepHoopsApp.run(["$rootScope","$location","$route","AuthService",function(e,o,t,r){e.$on("$routeChangeStart",function(e,t,n){r.isLoggedIn()===!1&&o.path("/login")})}]),prepHoopsApp.factory("siteFullName",function(){var e={};return{get:function(o){return e[o]},set:function(o,t){e[o]=t}}}),prepHoopsApp.controller("DropdownCtrl",["$scope","$rootScope","$http","$log","$location","siteFullName",function(e,o,t,r,n,s){e.feeds=[],e.getFeeds=function(){t.get("/network/getFeeds").success(function(o){e.feeds=o})},e.getFeeds(),e.go=function(o){e.getFeeds(),n.path(o),e.selectedSite=this.site.siteFullName,s.set("siteFullName",this.site.siteFullName)},e.$watch("selectedSite",function(){o.$broadcast("siteChanged",e.selectedSite)}),e.status={isopen:!1},e.toggled=function(e){r.log("Dropdown is now: ",e)},e.toggleDropdown=function(o){o.preventDefault(),o.stopPropagation(),e.status.isopen=!e.status.isopen}}]),prepHoopsApp.controller("logoutController",["$scope","$location","AuthService",function(e,o,t){e.logout=function(){console.log(t.getUserStatus()),t.logout().then(function(){o.path("/login")})}}]);